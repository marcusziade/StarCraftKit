name: Release

on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'  # Triggers on version tags like 2.0.0

jobs:
  build-macos:
    name: Build macOS
    runs-on: macos-latest
    timeout-minutes: 30
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup Swift
        uses: swift-actions/setup-swift@v2
        with:
          swift-version: "5.9.2"
      
      - name: Cache SPM dependencies
        uses: actions/cache@v4
        with:
          path: .build
          key: ${{ runner.os }}-spm-${{ hashFiles('Package.resolved') }}
          restore-keys: |
            ${{ runner.os }}-spm-
      
      - name: Build release binary
        run: |
          echo "Building universal binary for macOS"
          swift build -c release --arch arm64 --arch x86_64 --product starcraft-cli
      
      - name: Create distribution
        run: |
          mkdir -p dist
          cp .build/release/starcraft-cli dist/
          tar -czf "StarCraftKit-macOS-${{ github.ref_name }}.tar.gz" -C dist .
          shasum -a 256 *.tar.gz > "StarCraftKit-macOS-${{ github.ref_name }}.sha256"
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: StarCraftKit-macOS
          path: |
            *.tar.gz
            *.sha256

  build-linux:
    name: Build Linux (Docker)
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Build in Docker
        run: |
          docker run --rm -v "$PWD:/workspace" -w /workspace swift:5.9.2 bash -c "
            swift build -c release --static-swift-stdlib --product starcraft-cli && \
            mkdir -p dist && \
            cp .build/release/starcraft-cli dist/ && \
            tar -czf StarCraftKit-Linux-${{ github.ref_name }}.tar.gz -C dist . && \
            sha256sum *.tar.gz > StarCraftKit-Linux-${{ github.ref_name }}.sha256
          "
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: StarCraftKit-Linux
          path: |
            *.tar.gz
            *.sha256

  release:
    name: Create Release
    needs: [build-macos, build-linux]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
      
      - name: List artifacts
        run: |
          echo "Downloaded artifacts:"
          find artifacts -type f -name "*" | sort
      
      - name: Generate release notes
        id: release_notes
        run: |
          # Extract version number
          VERSION="${GITHUB_REF#refs/tags/}"
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          
          # Generate simple release notes
          cat > release-notes.md << EOF
          # StarCraftKit $VERSION

          ## Installation

          ### macOS

          \`\`\`bash
          curl -L https://github.com/${{ github.repository }}/releases/download/$VERSION/StarCraftKit-macOS-$VERSION.tar.gz | tar xz
          chmod +x starcraft-cli
          sudo mv starcraft-cli /usr/local/bin/
          \`\`\`

          ### Linux

          \`\`\`bash
          curl -L https://github.com/${{ github.repository }}/releases/download/$VERSION/StarCraftKit-Linux-$VERSION.tar.gz | tar xz
          chmod +x starcraft-cli
          sudo mv starcraft-cli /usr/local/bin/
          \`\`\`

          ## Checksums

          Verify your download with the provided SHA256 checksums.
          EOF
      
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          draft: false
          prerelease: false
          name: StarCraftKit ${{ steps.release_notes.outputs.VERSION }}
          body_path: release-notes.md
          generate_release_notes: true
          files: |
            artifacts/**/*.tar.gz
            artifacts/**/*.sha256
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}