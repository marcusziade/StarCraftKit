name: Release

on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 2.0.0)'
        required: true
        default: '2.0.0'

jobs:
  build-macos:
    name: Build macOS
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: swift-actions/setup-swift@v2
        with:
          swift-version: "5.9"
      - run: swift build -c release --product starcraft-cli
      - run: |
          mkdir -p dist
          cp .build/release/starcraft-cli dist/
          tar -czf starcraft-cli-macos.tar.gz -C dist .
      - uses: actions/upload-artifact@v4
        with:
          name: starcraft-cli-macos
          path: starcraft-cli-macos.tar.gz

  build-linux:
    name: Build Linux
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: |
          docker run --rm -v "$PWD:/workspace" -w /workspace swift:5.9 \
            swift build -c release --product starcraft-cli
          mkdir -p dist
          cp .build/release/starcraft-cli dist/
          tar -czf starcraft-cli-linux.tar.gz -C dist .
      - uses: actions/upload-artifact@v4
        with:
          name: starcraft-cli-linux
          path: starcraft-cli-linux.tar.gz

  release:
    needs: [build-macos, build-linux]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: artifacts
      - uses: softprops/action-gh-release@v1
        id: create_release
        with:
          files: artifacts/**/*.tar.gz
          generate_release_notes: true
          token: ${{ secrets.GH_TOKEN }}
      
      # Update Homebrew formula
      - name: Checkout homebrew-tap
        uses: actions/checkout@v4
        with:
          repository: guitaripod/homebrew-tap
          token: ${{ secrets.GH_TOKEN }}
          path: homebrew-tap
      
      - name: Calculate checksums and update formula
        run: |
          # Get version from tag or workflow input
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            VERSION="${{ github.event.inputs.version }}"
          else
            VERSION="${GITHUB_REF#refs/tags/}"
          fi
          
          # Calculate checksums
          MACOS_SHA256=$(sha256sum artifacts/starcraft-cli-macos/starcraft-cli-macos.tar.gz | cut -d' ' -f1)
          LINUX_SHA256=$(sha256sum artifacts/starcraft-cli-linux/starcraft-cli-linux.tar.gz | cut -d' ' -f1)
          
          cd homebrew-tap
          
          # Update the formula file
          sed -i "s/version \".*\"/version \"${VERSION}\"/" Formula/starcraft-cli.rb
          sed -i "s|download/.*/starcraft-cli-macos|download/${VERSION}/starcraft-cli-macos|" Formula/starcraft-cli.rb
          sed -i "s|download/.*/starcraft-cli-linux|download/${VERSION}/starcraft-cli-linux|" Formula/starcraft-cli.rb
          
          # Update SHA256 for macOS
          sed -i "/on_macos do/,/end/ s/sha256 \".*\"/sha256 \"${MACOS_SHA256}\"/" Formula/starcraft-cli.rb
          
          # Update SHA256 for Linux (within the if block)
          sed -i "/if Hardware::CPU.intel.*is_64_bit/,/end/ s/sha256 \".*\"/sha256 \"${LINUX_SHA256}\"/" Formula/starcraft-cli.rb
          
          # Configure git
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          
          # Commit and push
          git add Formula/starcraft-cli.rb
          git commit -m "Update starcraft-cli to ${VERSION}" || exit 0
          git push
      
      # Update AUR package
      - name: Checkout main repository for AUR templates
        uses: actions/checkout@v4
        with:
          path: main-repo
      
      - name: Setup SSH for AUR
        env:
          AUR_SSH_PRIVATE_KEY: ${{ secrets.AUR_SSH_PRIVATE_KEY }}
        run: |
          # Skip if no SSH key provided
          if [ -z "$AUR_SSH_PRIVATE_KEY" ]; then
            echo "No AUR SSH key provided, skipping AUR setup"
            exit 0
          fi
          
          mkdir -p ~/.ssh
          echo "$AUR_SSH_PRIVATE_KEY" > ~/.ssh/aur
          chmod 600 ~/.ssh/aur
          
          # Configure SSH
          cat >> ~/.ssh/config << 'EOF'
          Host aur.archlinux.org
            IdentityFile ~/.ssh/aur
            User aur
          EOF
          
          chmod 600 ~/.ssh/config
          ssh-keyscan -H aur.archlinux.org >> ~/.ssh/known_hosts
      
      - name: Update AUR package
        env:
          AUR_SSH_PRIVATE_KEY: ${{ secrets.AUR_SSH_PRIVATE_KEY }}
        run: |
          # Skip if no SSH key provided
          if [ -z "$AUR_SSH_PRIVATE_KEY" ]; then
            echo "No AUR SSH key provided, skipping AUR update"
            exit 0
          fi
          
          # Get version from tag or workflow input
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            VERSION="${{ github.event.inputs.version }}"
          else
            VERSION="${GITHUB_REF#refs/tags/}"
          fi
          LINUX_SHA256=$(sha256sum artifacts/starcraft-cli-linux/starcraft-cli-linux.tar.gz | cut -d' ' -f1)
          
          # Clone existing AUR package
          if ! git clone ssh://aur@aur.archlinux.org/starcraft-cli.git; then
            echo "❌ Failed to clone AUR package. Please create it first with:"
            echo "   ssh aur@aur.archlinux.org setup-repo starcraft-cli"
            echo "Skipping AUR update for this release."
            exit 0
          fi
          
          cd starcraft-cli
          
          # Copy updated PKGBUILD from main repo
          cp ../main-repo/aur/starcraft-cli/PKGBUILD .
          
          # Update version and checksum
          sed -i "s/pkgver=.*/pkgver=${VERSION}/" PKGBUILD
          sed -i "s/sha256sums=.*/sha256sums=('${LINUX_SHA256}')/" PKGBUILD
          
          # Generate .SRCINFO
          # Since makepkg is not available in Ubuntu runner, create it manually
          cat > .SRCINFO << EOF
          pkgbase = starcraft-cli
          	pkgdesc = Command-line tool for tracking StarCraft 2 esports
          	pkgver = ${VERSION}
          	pkgrel = 1
          	url = https://github.com/guitaripod/StarCraftKit
          	arch = x86_64
          	license = MIT
          	depends = glibc
          	source = starcraft-cli-${VERSION}.tar.gz::https://github.com/guitaripod/StarCraftKit/releases/download/${VERSION}/starcraft-cli-linux.tar.gz
          	sha256sums = ${LINUX_SHA256}
          
          pkgname = starcraft-cli
          EOF
          
          # Configure git
          git config user.name "Marcus Ziade"
          git config user.email "guitaripod@me.com"
          
          # Commit and push
          git add PKGBUILD .SRCINFO
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Update to ${VERSION}"
            git push
            echo "✅ AUR package updated to version ${VERSION}"
            echo "Package available at: https://aur.archlinux.org/packages/starcraft-cli"
          fi