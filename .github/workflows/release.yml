name: Release

on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'  # Triggers on version tags like 2.0.0

jobs:
  build:
    name: Build ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-latest
            name: macOS
            artifact-name: StarCraftKit-macOS
            build-args: "-c release --arch arm64 --arch x86_64"
            executable-name: starcraft-cli
          - os: ubuntu-latest
            name: Linux
            artifact-name: StarCraftKit-Linux
            build-args: "-c release --static-swift-stdlib"
            executable-name: starcraft-cli
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Needed for changelog generation
      
      - name: Setup Swift
        uses: swift-actions/setup-swift@v2
        with:
          swift-version: "5.9.2"
        continue-on-error: false
      
      - name: Verify Swift installation
        run: |
          echo "Swift path: $(which swift)"
          echo "Swift version:"
          swift --version
      
      - name: Cache SPM dependencies
        uses: actions/cache@v4
        with:
          path: .build
          key: ${{ runner.os }}-spm-${{ hashFiles('Package.resolved') }}
          restore-keys: |
            ${{ runner.os }}-spm-
      
      - name: Build release binary
        run: |
          echo "::group::Build Configuration"
          echo "OS: ${{ runner.os }}"
          echo "Build args: ${{ matrix.build-args }}"
          echo "::endgroup::"
          
          echo "::group::Resolving dependencies"
          swift package resolve
          echo "::endgroup::"
          
          echo "::group::Building release binary"
          swift build ${{ matrix.build-args }} --product starcraft-cli
          echo "::endgroup::"
      
      - name: Test release binary
        run: |
          echo "::group::Testing binary execution"
          .build/release/${{ matrix.executable-name }} --version || true
          echo "::endgroup::"
      
      - name: Create distribution directory
        run: |
          mkdir -p dist
          cp .build/release/${{ matrix.executable-name }} dist/
          
          # Create a simple README for the distribution
          cat > dist/README.md << 'EOF'
          # StarCraftKit CLI

          This is the command-line interface for StarCraftKit.

          ## Installation

          1. Extract the archive
          2. Move the `starcraft-cli` binary to a location in your PATH
          3. Make it executable (Unix only): `chmod +x starcraft-cli`
          4. Run `starcraft-cli --help` to get started

          ## Documentation

          Visit https://github.com/marcusziade/StarCraftKit for full documentation.
          EOF
      
      - name: Create archive
        run: |
          ARCHIVE_NAME="${{ matrix.artifact-name }}-${{ github.ref_name }}.tar.gz"
          echo "Creating archive: $ARCHIVE_NAME"
          tar -czf "$ARCHIVE_NAME" -C dist .
          echo "Archive size: $(ls -lh "$ARCHIVE_NAME" | awk '{print $5}')"
      
      - name: Generate checksum
        run: |
          shasum -a 256 *.tar.gz > "${{ matrix.artifact-name }}-${{ github.ref_name }}.sha256"
          echo "Checksum:"
          cat "${{ matrix.artifact-name }}-${{ github.ref_name }}.sha256"
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact-name }}
          path: |
            *.tar.gz
            *.sha256
          retention-days: 7

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
      
      - name: List artifacts
        run: |
          echo "Downloaded artifacts:"
          find artifacts -type f -name "*" | sort
      
      - name: Generate release notes
        id: release_notes
        run: |
          # Extract version number
          VERSION="${GITHUB_REF#refs/tags/}"
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          
          # Generate simple release notes
          cat > release-notes.md << EOF
          # StarCraftKit $VERSION

          ## What's Changed

          See the [full changelog](https://github.com/${{ github.repository }}/compare/$(git describe --tags --abbrev=0 HEAD^)...$VERSION) for details.

          ## Installation

          ### macOS

          \`\`\`bash
          curl -L https://github.com/${{ github.repository }}/releases/download/$VERSION/StarCraftKit-macOS-$VERSION.tar.gz | tar xz
          chmod +x starcraft-cli
          sudo mv starcraft-cli /usr/local/bin/
          \`\`\`

          ### Linux

          \`\`\`bash
          curl -L https://github.com/${{ github.repository }}/releases/download/$VERSION/StarCraftKit-Linux-$VERSION.tar.gz | tar xz
          chmod +x starcraft-cli
          sudo mv starcraft-cli /usr/local/bin/
          \`\`\`

          ## Checksums

          Verify your download with the provided SHA256 checksums.
          EOF
      
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          draft: false
          prerelease: false
          name: StarCraftKit ${{ steps.release_notes.outputs.VERSION }}
          body_path: release-notes.md
          files: |
            artifacts/**/*.tar.gz
            artifacts/**/*.sha256
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}