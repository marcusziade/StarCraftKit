name: Release with Windows Support

on:
  workflow_dispatch:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'  # Triggers on version tags like 2.0.0

jobs:
  build-unix:
    name: Build ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-latest
            name: macOS
            artifact-name: StarCraftKit-macOS
            build-args: "-c release --arch arm64 --arch x86_64"
            executable-name: starcraft-cli
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup Swift
        uses: swift-actions/setup-swift@v2
        with:
          swift-version: "5.9.2"
      
      - name: Cache SPM dependencies
        uses: actions/cache@v4
        with:
          path: .build
          key: ${{ runner.os }}-spm-${{ hashFiles('Package.resolved') }}
          restore-keys: |
            ${{ runner.os }}-spm-
      
      - name: Build release binary
        run: |
          echo "Building for ${{ matrix.name }}"
          swift build ${{ matrix.build-args }} --product starcraft-cli
      
      - name: Create distribution
        run: |
          mkdir -p dist
          cp .build/release/${{ matrix.executable-name }} dist/
          tar -czf "${{ matrix.artifact-name }}-${{ github.ref_name }}.tar.gz" -C dist .
          shasum -a 256 *.tar.gz > "${{ matrix.artifact-name }}-${{ github.ref_name }}.sha256"
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact-name }}
          path: |
            *.tar.gz
            *.sha256

  build-linux:
    name: Build Linux (Docker)
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Build in Docker
        run: |
          docker run --rm -v "$PWD:/workspace" -w /workspace swift:5.9.2 \
            bash -c "swift build -c release --static-swift-stdlib --product starcraft-cli && \
                     mkdir -p dist && \
                     cp .build/release/starcraft-cli dist/ && \
                     tar -czf StarCraftKit-Linux-${GITHUB_REF#refs/tags/}.tar.gz -C dist . && \
                     sha256sum *.tar.gz > StarCraftKit-Linux-${GITHUB_REF#refs/tags/}.sha256"
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: StarCraftKit-Linux
          path: |
            *.tar.gz
            *.sha256

  build-windows:
    name: Build Windows
    runs-on: windows-latest
    timeout-minutes: 30
    
    steps:
      - name: Configure Git
        run: git config --global core.longpaths true
      
      - name: Checkout code (sparse)
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            Package.swift
            Package.resolved
            Sources
            Tests
            README.md
            LICENSE
          sparse-checkout-cone-mode: false
      
      - name: Setup Swift
        uses: compnerd/gha-setup-swift@main
        with:
          branch: swift-5.9.2-release
          tag: 5.9.2-RELEASE
      
      - name: Build release binary
        shell: cmd
        run: |
          swift build -c release --product starcraft-cli
      
      - name: Create distribution
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Force -Path dist
          Copy-Item .build\release\starcraft-cli.exe dist\
          Compress-Archive -Path dist\* -DestinationPath "StarCraftKit-Windows-${{ github.ref_name }}.zip"
          
          # Generate checksum
          $hash = Get-FileHash -Algorithm SHA256 *.zip
          "$($hash.Hash.ToLower())  $($hash.Path.Split('\')[-1])" | Out-File -FilePath "StarCraftKit-Windows-${{ github.ref_name }}.sha256"
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: StarCraftKit-Windows
          path: |
            *.zip
            *.sha256

  release:
    name: Create Release
    needs: [build-unix, build-linux, build-windows]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
      
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          draft: false
          prerelease: false
          generate_release_notes: true
          files: |
            artifacts/**/*.tar.gz
            artifacts/**/*.zip
            artifacts/**/*.sha256
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}