{"metadata":{"title":"Basic Requests","roleHeading":"Article","role":"article","modules":[{"name":"StarCraftKit"}]},"sections":[],"identifier":{"url":"doc:\/\/StarCraftKit\/documentation\/StarCraftKit\/BasicRequests","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"minor":3,"major":0},"kind":"article","abstract":[{"type":"text","text":"Learn how to fetch different types of StarCraft II esports data using StarCraftKit."}],"hierarchy":{"paths":[["doc:\/\/StarCraftKit\/documentation\/StarCraftKit"]]},"seeAlsoSections":[{"identifiers":["doc:\/\/StarCraftKit\/documentation\/StarCraftKit\/QueryingData"],"anchor":"Making-Requests","generated":true,"title":"Making Requests"}],"primaryContentSections":[{"kind":"content","content":[{"text":"Overview","anchor":"Overview","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"StarCraftKit provides simple, intuitive methods for fetching various types of esports data. All requests are asynchronous and use Swiftâ€™s async\/await pattern.","type":"text"}]},{"text":"Fetching Matches","anchor":"Fetching-Matches","type":"heading","level":2},{"text":"Live Matches","anchor":"Live-Matches","type":"heading","level":3},{"type":"paragraph","inlineContent":[{"text":"Get currently live matches:","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["let liveMatches = try await client.getLiveMatches()","for match in liveMatches {","    print(\"\\(match.name) - \\(match.tournament.name)\")","    print(\"Score: \\(match.results?.first?.score ?? 0) - \\(match.results?.last?.score ?? 0)\")","}"]},{"text":"Upcoming Matches","anchor":"Upcoming-Matches","type":"heading","level":3},{"type":"paragraph","inlineContent":[{"type":"text","text":"Fetch matches scheduled for the future:"}]},{"type":"codeListing","syntax":"swift","code":["let upcomingMatches = try await client.getUpcomingMatches()","print(\"Next \\(upcomingMatches.count) matches:\")","for match in upcomingMatches {","    print(\"\\(match.name) starts at \\(match.scheduledAt)\")","}"]},{"text":"Past Matches","anchor":"Past-Matches","type":"heading","level":3},{"type":"paragraph","inlineContent":[{"text":"Get recently completed matches:","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["let pastMatches = try await client.getPastMatches()","for match in pastMatches {","    if let winner = match.winner {","        print(\"\\(match.name): \\(winner.name) won\")","    }","}"]},{"text":"All Matches with Filtering","anchor":"All-Matches-with-Filtering","type":"heading","level":3},{"type":"codeListing","syntax":"swift","code":["\/\/ Get matches for a specific date range","let startDate = Date().addingTimeInterval(-7 * 24 * 60 * 60) \/\/ 7 days ago","let endDate = Date()","","let parameters = QueryParameters()","    .range(field: \"scheduled_at\", from: startDate, to: endDate)","    .sort(by: \"scheduled_at\", order: .descending)","    .perPage(50)","","let matches = try await client.getMatches(parameters: parameters)"]},{"text":"Fetching Players","anchor":"Fetching-Players","type":"heading","level":2},{"text":"All Players","anchor":"All-Players","type":"heading","level":3},{"type":"codeListing","syntax":"swift","code":["let players = try await client.getPlayers()","for player in players {","    print(\"\\(player.name) - \\(player.nationality ?? \"Unknown\")\")","}"]},{"text":"Search for Players","anchor":"Search-for-Players","type":"heading","level":3},{"type":"codeListing","syntax":"swift","code":["let parameters = QueryParameters()","    .search(\"Serral\")","    .perPage(10)","","let searchResults = try await client.getPlayers(parameters: parameters)"]},{"text":"Player Details","anchor":"Player-Details","type":"heading","level":3},{"type":"codeListing","syntax":"swift","code":["let playerId = 12345","let player = try await client.getPlayer(id: playerId)","print(\"Player: \\(player.name)\")","print(\"Team: \\(player.currentTeam?.name ?? \"No team\")\")"]},{"text":"Fetching Teams","anchor":"Fetching-Teams","type":"heading","level":2},{"text":"Active Teams","anchor":"Active-Teams","type":"heading","level":3},{"type":"codeListing","syntax":"swift","code":["let teams = try await client.getTeams()","for team in teams {","    print(\"\\(team.name) - \\(team.acronym ?? \"\")\")","}"]},{"text":"Team Details","anchor":"Team-Details","type":"heading","level":3},{"type":"codeListing","syntax":"swift","code":["let teamId = 67890","let team = try await client.getTeam(id: teamId)","print(\"Team: \\(team.name)\")","print(\"Players: \\(team.players?.count ?? 0)\")"]},{"text":"Fetching Tournaments","anchor":"Fetching-Tournaments","type":"heading","level":2},{"text":"Current Tournaments","anchor":"Current-Tournaments","type":"heading","level":3},{"type":"codeListing","syntax":"swift","code":["let tournaments = try await client.getTournaments()","for tournament in tournaments {","    print(\"\\(tournament.name) - \\(tournament.serie.fullName)\")","    if let prizePool = tournament.prizepool {","        print(\"Prize Pool: $\\(prizePool)\")","    }","}"]},{"text":"Tournament Matches","anchor":"Tournament-Matches","type":"heading","level":3},{"type":"codeListing","syntax":"swift","code":["let tournamentId = 11111","let matches = try await client.getTournamentMatches(tournamentId: tournamentId)","print(\"Tournament has \\(matches.count) matches\")"]},{"text":"Fetching Leagues","anchor":"Fetching-Leagues","type":"heading","level":2},{"type":"codeListing","syntax":"swift","code":["let leagues = try await client.getLeagues()","for league in leagues {","    print(\"\\(league.name) - \\(league.url ?? \"No URL\")\")","}"]},{"text":"Fetching Series","anchor":"Fetching-Series","type":"heading","level":2},{"text":"All Series","anchor":"All-Series","type":"heading","level":3},{"type":"codeListing","syntax":"swift","code":["let series = try await client.getSeries()","for serie in series {","    print(\"\\(serie.fullName) - Year: \\(serie.year ?? 0)\")","}"]},{"text":"Running Series","anchor":"Running-Series","type":"heading","level":3},{"type":"codeListing","syntax":"swift","code":["let parameters = QueryParameters()","    .filter(by: \"running\", value: true)","","let runningSeries = try await client.getSeries(parameters: parameters)"]},{"text":"Error Handling","anchor":"Error-Handling","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Always handle potential errors when making requests:"}]},{"type":"codeListing","syntax":"swift","code":["do {","    let matches = try await client.getLiveMatches()","    \/\/ Process matches","} catch APIError.rateLimitExceeded(let retryAfter) {","    print(\"Rate limit exceeded. Retry after \\(retryAfter) seconds\")","} catch APIError.notFound {","    print(\"Resource not found\")","} catch {","    print(\"Unexpected error: \\(error)\")","}"]},{"text":"Next Steps","anchor":"Next-Steps","type":"heading","level":2},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Learn about "},{"type":"reference","identifier":"doc:\/\/StarCraftKit\/documentation\/StarCraftKit\/QueryingData","isActive":true},{"type":"text","text":" for advanced filtering"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Explore "},{"type":"text","text":"doc:Pagination"},{"type":"text","text":" for handling large datasets"}]}]},{"content":[{"inlineContent":[{"text":"Understand ","type":"text"},{"text":"doc:Caching","type":"text"},{"text":" to optimize performance","type":"text"}],"type":"paragraph"}]}]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/starcraftkit\/basicrequests"]}],"references":{"doc://StarCraftKit/documentation/StarCraftKit":{"abstract":[{"type":"text","text":"A modern Swift SDK for accessing StarCraft II esports data through the PandaScore API."}],"role":"collection","type":"topic","url":"\/documentation\/starcraftkit","title":"StarCraftKit","identifier":"doc:\/\/StarCraftKit\/documentation\/StarCraftKit","kind":"symbol"},"doc://StarCraftKit/documentation/StarCraftKit/QueryParameters":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"QueryParameters","kind":"identifier"}],"abstract":[{"type":"text","text":"Query parameters for API requests"}],"role":"symbol","type":"topic","url":"\/documentation\/starcraftkit\/queryparameters","title":"QueryParameters","navigatorTitle":[{"text":"QueryParameters","kind":"identifier"}],"identifier":"doc:\/\/StarCraftKit\/documentation\/StarCraftKit\/QueryParameters","kind":"symbol"},"doc://StarCraftKit/documentation/StarCraftKit/QueryingData":{"identifier":"doc:\/\/StarCraftKit\/documentation\/StarCraftKit\/QueryingData","type":"topic","kind":"article","url":"\/documentation\/starcraftkit\/queryingdata","title":"Querying Data","abstract":[{"text":"Learn how to use ","type":"text"},{"type":"reference","identifier":"doc:\/\/StarCraftKit\/documentation\/StarCraftKit\/QueryParameters","isActive":true},{"text":" to filter, sort, and paginate API results.","type":"text"}],"role":"article"}}}